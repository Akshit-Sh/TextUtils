{"version":3,"sources":["components/Alert.js","components/Footer.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","className","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","Footer","Navbar","Mode","href","title","id","class","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","backgroundColor","value","onChange","event","console","log","target","rows","showAlert","newText","disabled","length","navigator","clipboard","writeText","split","App","setMode","alert","setAlert","message","setTimeout","about","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f9a8a1e5.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word) =>{\r\n        const lower = word.toLowerCase()\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1)\r\n    }\r\n    return (\r\n       \r\n        props.Alert && <div className={`alert alert-${props.Alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.Alert.type)} </strong> : {props.Alert.msg}\r\n        </div> \r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <div>\r\n            <footer>\r\n      <div className=\"footer\">\r\n        &copy; Creator: Akshit\r\n      </div>\r\n      </footer>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.Mode} bg-${props.Mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                {/* <Link className=\"nav-link\" to=\"/about\">{props.about}</Link> */}\r\n              </li>\r\n            </ul>\r\n            {/* <htmlForm className=\"d-flex\">\r\n              <input className=\"htmlForm-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n              <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n            </htmlForm> */}\r\n                    <div class={`htmlForm-check htmlForm-switch text-${props.Mode=== 'light' ? 'dark' : 'light'}`}>\r\n          <input class=\"htmlForm-check-input\" type=\"checkbox\" onClick = {props.toggleMode} role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n          <label class=\"htmlForm-check-label\" htmlFor=\"flexSwitchCheckDefault\"> Enable Dark Mode</label>\r\n        </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\n\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string,\r\n    about: PropTypes.string,\r\n}","import React, {useState}  from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = () =>{\r\n        console.log(\"Convert to Upper Case was clicked\")\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Text converted to Upper Case\", \"success\");\r\n    }\r\n    const handleLoClick = () =>{\r\n        console.log(\"Convert to Upper Case was clicked\")\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"Text converted to Lower Case\", \"success\")\r\n    }\r\n    const handleClClick = () =>{\r\n        console.log(\"Convert to Upper Case was clicked\")\r\n        let newText = text.toLowerCase();\r\n        setText(\" \")\r\n        props.showAlert(\"Text has been cleared\", \"success\")\r\n    }\r\n    const handleOnChange = (event) =>{\r\n        console.log(\"handleOnChange was clicked\")\r\n        setText(event.target.value)\r\n    }\r\n\r\n    const handleCopy = () => {\r\n        navigator.clipboard.writeText(text); \r\n        props.showAlert(\"Copied to Clipboard!\", \"success\");\r\n    }\r\n\r\n    const [text, setText] = useState(\"\");\r\n    return (\r\n        <>\r\n        <div className=\"container\" style ={{color:props.Mode=== 'dark' ? 'white' : '#042743'}}>\r\n            <h1 >{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n            <textarea className=\"form-control\" id=\"mybox\" style ={{backgroundColor:props.Mode=== 'dark' ? 'grey' : 'white'}} value = {text} onChange={handleOnChange} rows=\"8\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary mx-2\" onClick= {handleClClick}>Clear text</button>\r\n            <button className=\"btn btn-primary\" onClick= {handleUpClick}>Convert to UpperCase</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick= {handleLoClick}>Convert to LowerCase</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleCopy}> Copy Text</button>\r\n        </div>\r\n\r\n        <div className=\"container my-12\" style ={{color:props.Mode=== 'dark' ? 'white' : '#042743'}}>\r\n            <h2>\r\n                Your text summary:\r\n            </h2>\r\n            <p>\r\n                <b>{text.split(\" \").length}</b> words <b>{text.length}</b> characters\r\n            </p>\r\n            <p>\r\n                <b> {0.008 * text.split(\" \").length}</b> minutes to read\r\n            </p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:\"Enter something to preview here\"}</p>\r\n        </div>\r\n\r\n        </>\r\n    )\r\n}\r\n","import './App.css';\nimport React, {useState} from 'react'\n// import About from './components/About';\nimport Alert from './components/Alert';\nimport Footer from './components/Footer';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\nfunction App() {\n  const [Mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null)\n   const showAlert =(message, type) =>{\n        setAlert({\n          msg: message,\n          type: type\n        })\n        setTimeout(() => {\n          setAlert(null)\n        }, 2000);\n  }\n\n  const toggleMode = () => {\n    if(Mode === 'light'){\n      setMode('dark')\n      document.body.style.backgroundColor = '#042743'\n      showAlert(\"Dark Mode has been enabled\", \"success\")\n      document.title = \"TextUtils - Dark Mode\"\n      \n    }\n    else{ \n      setMode('light')\n      document.body.style.backgroundColor = 'white'\n      showAlert(\"Light Mode has been enabled\", \"success\")\n      document.title = \"TextUtils - Light Mode\"\n    } \n   }\n  return (\n    <>\n    {/* <Router> */}\n <Navbar title = \"textutils\" about = \"About Textutils\" Mode = {Mode} toggleMode={toggleMode}/>\n <Alert Alert = {alert}/>\n <div className=\"container my-3\">\n {/* <Switch>\n          <Route exact path=\"/about\">\n            <About />\n          </Route>\n          <Route exact path=\"/\">\n          </Route>\n        </Switch> */}\n        <TextForm showAlert={showAlert} heading = \"Enter the text to analyze\"  Mode = {Mode}/>\n {/* <About/> */}\n </div>\n {/* </Router> */}\n <Footer/>\n \n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}